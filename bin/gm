#!/bin/sh
# window group manager
#
# copyright 2016 (c) greduan & kori

. $XDG_CONFIG_HOME/wm.conf

usage() {
	echo 'usage: gm [add|rm|toggle|single] <group number>'
	echo 'gm rename <group number> <name>'
}

# this is here to ensure gm will work on all POSIX systems
seq() {
	i=$1
	while [ "$i" -le $2 ]; do
		echo $i
		let "i+=1"
	done
}

addToGroup() {
	:> $WMGROUPS/$2/$1
	showGroup $2
}

removeFromGroup() {
	rm $WMGROUPS/$2/$1
}

hideGroup() {
	for file in $WMGROUPS/$1/*; do
		wid=$(basename $file)
		mapw -u $wid
	done
	echo 0 > $WMSTATUS/$1
}

showGroup() {
	for file in $WMGROUPS/$1/*; do
		wid=$(basename $file)
		mapw -m $wid
	done
	echo 1 > $WMSTATUS/$1
}

toggleGroup() {
	wid=$(ls -1 $WMGROUPS/$1 | sed 1q)

	test -z "$wid" && return
	wattr m $wid && hideGroup $1 \
	|| showGroup $1
}

showSingle() {
	toggleGroup $1

	othergroups=$(seq 1 $NGROUPS | tr -d "$1")

	for og in $othergroups; do
		hideGroup $og
	done
}

groupStatus() {
	for ws in $WMSTATUS/*; do
		echo "$(basename $ws):$(cat $ws)" | tr '\n' ' '
	done
	echo
}

nameGroup() {
	echo $2 > $WMGROUPNAMES/$1
}

# directory checks
if [ -z $WMROOT ]; then
	echo "wm root not defined"
	exit 1
fi
[ ! -d $WMGROUPS ] && mkdir -p $WMGROUPS
[ ! -d $WMSTATUS ] && mkdir -p $WMSTATUS
[ ! -d $WMGROUPNAMES ] && mkdir -p $WMGROUPNAMES

# populate initial hierarchy
for group in $(seq 1 $NGROUPS); do
	test -d $WMGROUPS/$group || mkdir -p $WMGROUPS/$group

	if [ $(find $WMGROUPS/$group -maxdepth 0 -type d -empty) ]; then
		echo 0 > $WMSTATUS/$group
	fi
done
if [ $(find $WMGROUPNAMES -empty) ]; then
	for group in $(seq 1 $NGROUPS); do
			echo $group > $WMGROUPNAMES/$group
	done
fi

# remove non-group files from group root
for maybeWid in $(find $WMGROUPS -type f); do
	wattr $(basename $maybeWid) || rm -f $maybeWid
done

# parse args
case $1 in
	add) addToGroup `pfw` $2 ;;
	rm) removeFromGroup `pfw` $2 ;;
	toggle) toggleGroup $2 ;;
	status) groupStatus ;;
	single) showSingle $2 ;;
	rename) nameGroup $2 $3 ;;
	'') [ $# -eq 0 ] && {
		echo -n "Groups root: "
		tree $WMGROUPS
	} ;;
	*) usage && exit 0 ;;
esac
