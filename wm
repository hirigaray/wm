#!/bin/sh
# window mangler

. $XDG_CONFIG_HOME/wm.conf

usage() {
	echo "$(basename $0) [-adsth <group number>]"
}

addToGroup() {
	:> $WMGROUPS/$2/$1
	showGroup $2
}

removeFromGroup() {
	test "$2" = "all" \
	&& rm -f $WMGROUPS/*/$1 \
	|| rm -f $WMGROUPS/$2/$1
}

findGroup() {
	file=$(find $WMGROUPS -name "$1")
	test -n "$file" && basename $(dirname $file)
}

showGroup() {
	for file in $WMGROUPS/$1/*; do
			wid=$(basename $file)
			mapw -m $wid
	done
	echo 1 > $WMSTATUS/$1
}

hideGroup() {
	for file in $WMGROUPS/$1/*; do
			wid=$(basename $file)
			mapw -u $wid
	done
	echo 0 > $WMSTATUS/$1
}

toggleGroup() {
	wid=$(ls -1 $WMGROUPS/$1 | sed 1q)

	test -z "$wid" && return
	wattr m $wid \
		&& hideGroup $1 \
		|| showGroup $1
}

checkGroups() {
	if [ ! -d $WMSTATUS ]; then
		mkdir $WMSTATUS
	fi
	for g in $(seq 1 $GROUPS); do
			test -d $WMGROUPS/$g || mkdir -p $WMGROUPS/$g
	done

	for file in $(find $WMGROUPS -type f); do
		wid=$(basename $file)
		wattr $wid || rm -f $file
	done

	for ws in $(seq 1 $GROUPS); do
		if [ $(find $WMGROUPS/$ws -maxdepth 0 -type d -empty) ]; then
			echo 0 > $WMSTATUS/$ws
		fi
	done
}

checkGroups

while getopts ":a:wd:gm:t:h:" opt; do
	case $opt in
		a) addToGroup `pfw` $OPTARG ;;
		d) removeFromGroup `pfw` $OPTARG ;;
		g) findGroup `pfw` ;;
		s) showGroup $OPTARG ;;
		t) toggleGroup $OPTARG ;;
		h) hideGroup $OPTARG ;;
		*) usage && exit 0;;
	esac
done

# in case no argument is given, display the whole tree
test $# -eq 0 && tree --noreport $WMGROUPS
