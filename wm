#!/bin/sh
# window mangler

# number of groups
WNUMBER=5

# root for group files
WROOT=$TMPDIR/wm/groups.d

# each file in $WSTATUS represents a group, if it contains 0, the group is inactive, if it contains 1, it's active.
WSTATUS=$TMPDIR/wm/status.d

usage() {
	echo "$(basename $0) [-adsth <group number>]"
}

addToGroup() {
	:> $WROOT/$2/$1
	showGroup $2
}

removeFromGroup() {
	test "$2" = "all" \
	&& rm -f $WROOT/*/$1 \
	|| rm -f $WROOT/$2/$1
}

findGroup() {
	file=$(find $WROOT -name "$1")
	test -n "$file" && basename $(dirname $file)
}

showGroup() {
	for file in $WROOT/$1/*; do
			wid=$(basename $file)
			mapw -m $wid
	done
	echo 1 > $WSTATUS/$1
}

hideGroup() {
	for file in $WROOT/$1/*; do
			wid=$(basename $file)
			mapw -u $wid
	done
	echo 0 > $WSTATUS/$1
}

toggleGroup() {
	wid=$(ls -1 $WROOT/$1 | sed 1q)

	test -z "$wid" && return
	wattr m $wid \
		&& hideGroup $1 \
		|| showGroup $1
}

checkGroups() {
	if [ ! -d $WSTATUS ]; then
		mkdir $WSTATUS
	fi
	for g in $(seq 1 $WNUMBER); do
			test -d $WROOT/$g || mkdir -p $WROOT/$g
	done

	for file in $(find $WROOT -type f); do
		wid=$(basename $file)
		wattr $wid || rm -f $file
	done

	for ws in $(seq 1 $WNUMBER); do
		if [ $(find $WROOT/$ws -maxdepth 0 -type d -empty) ]; then
			echo 0 > $WSTATUS/$ws
		fi
	done
}

checkGroups

while getopts ":a:wd:gm:t:h:" opt; do
	case $opt in
		a) addToGroup `pfw` $OPTARG ;;
		d) removeFromGroup `pfw` $OPTARG ;;
		g) findGroup `pfw` ;;
		s) showGroup $OPTARG ;;
		t) toggleGroup $OPTARG ;;
		h) hideGroup $OPTARG ;;
		*) usage && exit 0;;
	esac
done

# in case no argument is given, display the whole tree
test $# -eq 0 && tree --noreport $WROOT
